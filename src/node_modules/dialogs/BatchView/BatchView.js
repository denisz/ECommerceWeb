import React from 'react';
import {DialogComponent, DialogFactory, ErrorView} from 'modules/Form';
import Order from 'flux/Order';
import Weight from 'components/Weight';
import Invoice from 'components/Invoice';
import {Price} from 'components/Currency';
import DateComponent from 'components/Date';
import OrderView from 'dialogs/OrderView';
import Actions from 'flux/AdminActions';
import ActionOrder from 'flux/OrderActions';
import {noun} from 'plural-ru';
import DialogToolbar from 'components/DialogToolbar';
import * as keys from './constants';
import './BatchView.css';

const kDialogKey = 'dialog';

export default class BatchView extends DialogComponent {
  printForm = async () => {
    try {
      const {form} = this.state;
      await Actions.printForms(form.getObject(keys.kIDKey));
    } catch (error) {
      this.setState({error});
    }
  };

  deleteBatch = async () => {
    try {
      const {form} = this.state;
      await Actions.deleteBatch(form.getObject(keys.kIDKey));
      this.onCancel();
    } catch (error) {
      this.setState({error});
    }
  };

  viewOrder = (orderInvoice) => async () => {
    const {dialogs} = this.state;
    try {
      await ActionOrder.fetch(orderInvoice);
      const order = Order.toJSON();
      dialogs.showDialog(kDialogKey, {
        size: 'large',
        showHeader: true,
        header: `Order №${orderInvoice}`,
        Component: <OrderView value={order}/>,
      });
    } catch (error) {
      this.setState({error});
    }
  };

  render() {
    const {error, dialogs, form} = this.state;

    return (
        <div className="BatchView">
          <ErrorView error={error}/>
          <div className="text-muted">Сдача в ОПС 430005
            — <strong><DateComponent
                format="DD-MM-YYYY"
                value={form.getObject(keys.kCreatedAtKey)}/></strong> {noun(
                form.getObject(keys.kOrdersKey, []).length, '%d отправление',
                '%d отправления', '%d отправлений')}</div>

          <table className="BatchView__table table table-bordered">
            <thead>
            <tr>
              <th>Заказ</th>
              <th>Вес</th>
              <th>Цена</th>
            </tr>
            </thead>

            <tbody>
            {
              form.getObject(keys.kOrdersKey, []).map(i => (
                  <tr key={i[keys.kOrderIdKey]}
                      onClick={this.viewOrder(i[keys.kOrderInvoiceKey])}>
                    <td>
                      <Invoice value={i[keys.kOrderInvoiceKey]}/>
                    </td>
                    <td>
                      <Weight className="BatchView__weight"
                              value={i[keys.kOrderWeightKey]}/>
                    </td>
                    <td>
                      <Price className="BatchView__price"
                             value={i[keys.kOrderPriceKey]}/>
                    </td>
                  </tr>
              ))
            }
            </tbody>

          </table>
          <div className="text-center">
            <a className="BatchView__print-form" onClick={this.printForm}>Распечатать
              бланки</a>
          </div>
          <DialogToolbar
              onSubmit={this.deleteBatch}
              labelSubmit="Удалить"
              onCancel={this.onCancel}
              labelCancel="Закрыть"
          />
          <DialogFactory dialogs={dialogs} dialogKey={kDialogKey}/>
        </div>
    );
  }
}