import { isFunction, has, isObject } from 'underscore';
import ServerError from './ServerError';

export const ServerErrorHandler = (error, control) => {
  if (error instanceof ServerError) {
    if (isObject(control) && isFunction(control.setError)) {
      console.log(error.response, error.response.message);
      control.setError(error.message);
    }
  }
};

export const ServerClearError = (control) => {
  if (isObject(control) && isFunction(control.clearError)) {
    control.clearError();
  }
};

export const WrapperServerErrorHandler = (target) => {
  let control = target;

  if (isObject(control) && has(control, 'error')) {
    control = control.error;
  }

  return (error) => {
    ServerErrorHandler(error, control);
    throw error;
  };
};

export const WrapperServerClearError = control => () => ServerClearError(control);
