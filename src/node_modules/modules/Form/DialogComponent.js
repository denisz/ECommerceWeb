/* eslint-disable react/no-direct-mutation-state */
import PropTypes from 'prop-types';
import { defer } from 'underscore';
import FormComponent from './FormComponent';

const isFunction = obj => typeof obj === 'function' || false;

export default class DialogComponent extends FormComponent {
  // getChildContext() {
  //   return {
  //     onCancel: this.onCancel,
  //     onSubmit: this.onSubmit
  //   };
  // }

  onCancel = (...args) => {
    if (isFunction(this.props.onCancel)) {
      this.props.onCancel(...args);
    } else if (isFunction(this.context.hideDialog)) {
      this.context.hideDialog(...args);
    }
  };

  shouldCancelAfterSubmit() {
    return this.props.submitCancel;
  }

  async formDidSubmit(attrs) {
    await super.formDidSubmit(attrs);

    if (this.shouldCancelAfterSubmit()) {
      defer(this.onCancel);
    }
  }
}

DialogComponent.propTypes = {
  submitCancel: PropTypes.bool,
};
DialogComponent.defaultProps = {
  submitCancel: false,
};
DialogComponent.contextTypes = {
  hideDialog: PropTypes.func,
};
