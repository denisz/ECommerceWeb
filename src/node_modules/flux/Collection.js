import { Store } from 'modules/Flux';
import Actions from './CollectionActions';
import XHR, { Methods } from './XHR';

export class Collection extends Store {
  constructor() {
    super();

    this.id = 'collection';
    this.listenables = Actions;
  }

  /**
   * Загрузка из сервера
   * @param id
   * @returns {Promise.<void>}
   */
  async onFetch(id) {
    const { responseData } = await XHR(Methods.POST, { path: `catalog/collection/${id}` });
    this.setState(responseData);
  }

  /**
   * Загружаем если требуется
   * @param id
   * @returns {Promise.<void>}
   */
  async onFetchIfNeeded(id) {
    const numberId = parseInt(id, 10);
    const currentId = this.get('id');

    if (currentId !== numberId) {
      await this.onFetch(id);
    }
  }
}

export default new Collection();
